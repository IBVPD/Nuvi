<?php

namespace NS\SentinelBundle\Repository;

use NS\SentinelBundle\Repository\Common as CommonRepository;

/**
 * Site
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Site extends CommonRepository
{
    public function getChain($codes = null)
    {
        $qb = $this->getChainQueryBuilder();

        if(is_array($codes))
            $qb->add('where', $qb->expr()->in('s.code', '?1'))->setParameter(1, $codes);
        else if($codes != null)
            $qb->andWhere('s.code = :code')->setParameter('code',$codes);

        return $qb->getQuery()->getResult();
    }

    public function getChainQueryBuilder()
    {
        $qb = $this->createQueryBuilder('s')
                ->select('s,c,r')
                ->innerJoin('s.country', 'c')
                ->innerJoin('c.region', 'r');

        return ($this->hasSecuredQuery()) ? $this->secure($qb) : $qb;
    }

    public function getChainByCode($codes)
    {
        $qb = $this->getChainQueryBuilder();

        if(is_array($codes))
            $qb->add('where', $qb->expr()->in('s.code', '?1'))->setParameter(1, $codes);
        else if(is_string($codes))
            $qb->add('where', 's.code = :codes')->setParameter('codes',$codes);
        else
            throw new \InvalidArgumentException(sprintf("Must provide an array of codes or single code. Received: %s",gettype($codes)));

        return $qb->getQuery()->getResult();
    }

    public function findAll()
    {
        $qb = $this->hasSecuredQuery() ? $this->secure($this->createQueryBuilder('s')): $this->createQueryBuilder('s');

        return  $qb->getQuery()->getResult();
    }
}
